name: CICD

on:
  push:
    branches: [ "main" ]
  repository_dispatch:
    types: [ trigger-cicd ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [MALL_PRODUCT]
    steps:
      - name: Set target deployment environment
        run: |
          STATUS=$(curl -o /dev/null -w "%{http_code}" "http://${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}/env")
          if [ "$STATUS" == "200" ]; then
            CURRENT_UPSTREAM=$(curl -s "http://${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}/env")
          else
            CURRENT_UPSTREAM="green"
          fi
          echo "CURRENT_UPSTREAM=$CURRENT_UPSTREAM" >> $GITHUB_ENV
          
          if [ "$CURRENT_UPSTREAM" == "blue" ]; then
            echo "CURRENT_PORT=8080" >> $GITHUB_ENV
            echo "STOPPED_PORT=8081" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=green" >> $GITHUB_ENV
          elif [ "$CURRENT_UPSTREAM" == "green" ]; then
            echo "CURRENT_PORT=8081" >> $GITHUB_ENV
            echo "STOPPED_PORT=8080" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=blue" >> $GITHUB_ENV
          else
            echo "Invalid upstream"
            exit 1
          fi
      - name: Use SSH action
        uses: appleboy/ssh-action@master
        with:
          host: 52.78.112.137
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY}}
          debug: true  # 디버깅 출력 활성화

      - name: Deploy new version to ${{ env.TARGET_UPSTREAM }}
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}_server:latest
            sudo docker-compose -f docker-compose-${{ env.TARGET_UPSTREAM }}.yml up -d

      - name: Verify deployment
        uses: jtalk/url-health-check-action@v3
        with:
          url: http://${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}:${{ env.STOPPED_PORT }}/product/env
          echo: "http://${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}:${{ env.STOPPED_PORT }}/product/env"
          max-attempts: 3
          retry-delay: 10s

      - name: Update Nginx to point to ${{ env.TARGET_UPSTREAM }}
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: 52.78.112.137
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker exec -i nginxserver bash -c 'echo "set \$service_url ${{ env.TARGET_UPSTREAM }};" > /etc/nginx/conf.d/service-env.inc && nginx -s reload'

      - name: Stop previous version ${{ env.CURRENT_UPSTREAM }}
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker stop ${{ env.CURRENT_UPSTREAM }}
            sudo docker rm ${{ env.CURRENT_UPSTREAM }}
