name: mall_infraCICD

on:
  push: 
    branches: [ "main" ]
  repository_dispatch:
      types: 
      - trigger-cicd-mall_product
      - trigger-cicd-mall_cart
      - trigger-cicd-mall_order
      - trigger-cicd-FrontEnd
      - trigger-cicd-mall_user

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: mall_product
            endpoint: product
          # - service: mall_order
          #   endpoint: order
          # - service: mall_cart
          #   endpoint: cart
    steps:
      - name: Set target deployment environment
        run: |
          STATUS=$(curl -o /dev/null -w "%{http_code}" "http://${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}/env")
          if [ "$STATUS" == "200" ]; then
            CURRENT_UPSTREAM=$(curl -s "http://${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}/env")
          else
            CURRENT_UPSTREAM="green"
          fi
          echo "CURRENT_UPSTREAM=$CURRENT_UPSTREAM" >> $GITHUB_ENV
          
          if [ "$CURRENT_UPSTREAM" == "blue" ]; then
            echo "CURRENT_PORT=8080" >> $GITHUB_ENV
            echo "STOPPED_PORT=8081" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=green" >> $GITHUB_ENV
          elif [ "$CURRENT_UPSTREAM" == "green" ]; then
            echo "CURRENT_PORT=8081" >> $GITHUB_ENV
            echo "STOPPED_PORT=8080" >> $GITHUB_ENV
            echo "TARGET_UPSTREAM=blue" >> $GITHUB_ENV
          else
            echo "Invalid upstream"
            exit 1
          fi
      - name: Use SSH action
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets[format('{0}_SERVER_IP', matrix.service)]}}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY}}
          debug: true  # 디버깅 출력 활성화 

      - name: Deploy new version to ${{ env.TARGET_UPSTREAM }}
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets[format('{0}_SERVER_IP', matrix.service)] }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}_server:latest
            #sudo sed -i "s/^ACTIVE_ENV=.*/ACTIVE_ENV=$TARGET_UPSTREAM/" /home/ubuntu/mall_infra/.env
            sudo -E /home/ubuntu/mall_infra/deploy.sh
